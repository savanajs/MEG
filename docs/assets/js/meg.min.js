/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "../src/assets/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../src/assets/js/main.js":
/*!********************************!*\
  !*** ../src/assets/js/main.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {(function ($) {
  var $win = $(window);
  var $doc = $(document);

  var Meg = function Meg() {
    console.info("%cMEG CSS Framework - You are working on your project! Thanks:) | See documentation: http://savanajs.github.io/meg", "color:#00cc99;font-weight:bold;font-size:11px");
  };

  Meg.prototype.accessibility = function () {
    return {
      "checkboxAndLabelOpen": function checkboxAndLabelOpen() {
        $("body").on("keypress", "input:checkbox, label", function (e) {
          if ((e.keyCode ? e.keyCode : e.which) == 13) {
            $(this).trigger("click");
          }
        });
      },
      "init": function init() {
        this.checkboxAndLabelOpen();
      }
    };
  };

  Meg.prototype.lazyLoad = function () {
    return {
      "selector": ".js-lazy-img",
      "isOnScreen": function isOnScreen(element) {
        var win = $(window);
        var screenTop = win.scrollTop();
        var screenBottom = screenTop + win.height();
        var elementTop = element.offset().top;
        var elementBottom = elementTop + element.height();
        return elementBottom > screenTop && elementTop < screenBottom;
      },
      "loadImages": function loadImages() {
        var _self = this;

        $.each($(this.selector), function () {
          var block = $(this);
          var image = block.find("img");

          if (_self.isOnScreen(block)) {
            var url = image.attr("url");

            if (image.attr("src") != url) {
              image.attr("src", url);
            }
          }
        });
      },
      "events": function events() {
        var _self = this;

        $(document).on("scroll", function () {
          _self.loadImages();
        });
      },
      "load": function load() {
        var selector = $(this.selector);
        selector.find("img").on("load", function () {
          $(this).addClass("js-loaded");
        });
      },
      "init": function init() {
        this.loadImages();
        this.events();
        this.load();
      }
    };
  };

  Meg.prototype.scrolling = function () {
    return {
      "selector_scrolling_to": ".js-scrolling-to",
      "selector_return_top": ".js-return-top",
      "scrollingTo": function scrollingTo(target) {
        if (!target) {
          return;
        }

        $("body, html").animate({
          "scrollTop": $(target).offset().top
        }, 500);
      },
      "events": function events() {
        var _self = this;

        $("body").on("click", this.selector_scrolling_to, function (e) {
          e.preventDefault();
          var goto = $(this).attr("data-to");

          _self.scrollingTo(goto);
        });
        $(window).on("scroll", function () {
          var scrollTop = $(window).scrollTop();

          if (scrollTop > 100) {
            $(_self.selector_return_top).fadeIn(500);
          } else {
            $(_self.selector_return_top).fadeOut();
          }
        });
      },
      "init": function init() {
        $(this.selector_return_top).hide();
        this.events();
      }
    };
  };

  Meg.prototype.alert = {
    "selector_modal": ".js-modal--alert",
    "selector_modal_trigger": ".js-modal--alert-trigger",
    "setHmlt": function setHmlt() {
      var html = "<div class=\"modal js-modal js-modal--alert\" role=\"dialog\" aria-modal=\"true\" tabindex=\"-1\">\n                              <div class=\"modal__wrap\" aria-hidden=\"true\" role=\"dialog\">\n                                  <div class=\"modal__overlay\" for=\"c-alert__1\"></div>\n                                  <div class=\"modal__dialog u-box-shadow\">\n                                      <div class=\"modal__header u-font-size-xx\">\n                                      <span class=\"modal__header--title\"></span>\n                                      <a href=\"#\" class=\"modal__btn-close js-modal--close\" title=\"Close\">\xD7</a>\n                                      </div>\n                                      <div class=\"modal__body\">\n                                      </div>\n                                      <div class=\"modal__footer\">\n                                      <a href=\"#\" title=\"Close\" class=\"btn js-modal--close btn--sized u-color-white u-bg-success\">\n                                          OK\n                                      </a>\n                                      </div>\n                                  </div>\n                              </div>\n                      </div>";

      if (!$(".js-modal--alert").length) {
        $("body").append(html);
      }
    },
    "setInfosAlert": function setInfosAlert(data) {
      if (!data || !data.title || !data.body) {
        return;
      }

      $(this.selector_modal).find(".modal__header--title").text(data.title);
      $(this.selector_modal).find(".modal__body").html(data.body);
      $(this.selector_modal).find(".btn--success").text(data.button_text);
    },
    "open": function open(data) {
      this.setHmlt();
      this.setInfosAlert(data);
      $(this.selector_modal).addClass("actived");
    },
    "close": function close() {
      scope.modal().closeModal();
    },
    "events": function events() {
      var _self = this;

      $(this.selector_modal_trigger).on("click", function (e) {
        e.preventDefault();

        _self.open({
          "title": "Title of exemple",
          "body": "Cool....",
          "button_text": "Continue"
        });
      });
    },
    "init": function init() {
      this.events();
    }
  };

  Meg.prototype.modal = function () {
    return {
      "selector_modal": ".js-modal",
      "selector_open_modal": ".js-modal--open",
      "selector_close_modal": ".js-modal--close",
      "openModal": function openModal($this) {
        if (!$this) {
          return;
        }

        var target = $this.attr("href");

        if (!target) {
          $this.addClass("actived");
          return;
        }

        $(target).addClass("actived");
      },
      "closeModal": function closeModal() {
        $(this.selector_modal).removeClass("actived");
      },
      "events": function events() {
        var _self = this;

        $(this.selector_open_modal).on("click", function (e) {
          e.preventDefault();

          _self.openModal($(this));
        });
        $("body").on("click", this.selector_close_modal, function (e) {
          e.preventDefault();

          _self.closeModal();
        });
      },
      "show": function show(element_modal) {
        if (!element_modal) {
          return;
        }

        this.openModal($(element_modal));
        return true;
      },
      "hide": function hide() {
        this.closeModal();
        return true;
      },
      "init": function init() {
        this.events();
      }
    };
  };

  Meg.prototype.tab = function () {
    return {
      "selector_link": ".js-tab",
      "selector_wrap": ".js-tab__inner",
      "setClassActiveTab": function setClassActiveTab($this) {
        if (!$this) {
          return;
        }

        $this.addClass("actived");
      },
      "removeClassActiveTab": function removeClassActiveTab() {
        $(this.selector_link).removeClass("actived");
      },
      "setClassActiveWrap": function setClassActiveWrap($this) {
        if (!$this) {
          return;
        }

        var target = $this.attr("href");
        $(target).addClass("actived");
      },
      "removeClassActiveWrap": function removeClassActiveWrap() {
        $(this.selector_wrap).removeClass("actived");
      },
      "events": function events() {
        var _self = this;

        $(this.selector_link).on("click", function (e) {
          e.preventDefault();

          _self.removeClassActiveTab();

          _self.removeClassActiveWrap();

          _self.setClassActiveTab($(this));

          _self.setClassActiveWrap($(this));
        });
      },
      "init": function init() {
        this.events();
      }
    };
  };

  Meg.prototype.loading = function () {
    return {
      "setHtmlLoading": function setHtmlLoading() {
        var html = "<div class=\"loader__overlay loader__overlay--open loader__overlay--absolute\">\n                  <div class=\"loader loader--medium loader--primary\"></div>\n              </div>";

        if (!$(".loader").length) {
          $("body").append(html);
        }
      },
      "setHtmlWaitLoading": function setHtmlWaitLoading() {
        var html = "<div class=\"loader__waiting-overlay loader__waiting-overlay--open loader__waiting-overlay--absolute\">\n                  <div class=\"loader__waiting\">\n                      <div class=\"c-waiting__warp-loader\">\n                          <div class=\"loader loader--medium loader--primary\"></div>\n                      </div>\n                      <div class=\"c-waiting__content\">\n                          <span class=\"c-waiting__title\">Please wait...</span>\n                      </div>\n                  </div>\n              </div>";

        if (!$(".loader__waiting").length) {
          $("body").append(html);
        }
      },
      "showLoading": function showLoading() {
        this.setHtmlLoading();
        $("body").addClass("loading");
        return true;
      },
      "hideLoading": function hideLoading() {
        $("body").removeClass("loading");
        return true;
      },
      "setTitleWaitLoading": function setTitleWaitLoading(title) {
        if (!title) {
          return;
        }

        $(".loader__waiting .c-waiting__title").text(title);
        return true;
      },
      "showWaitLoading": function showWaitLoading(title) {
        this.setHtmlWaitLoading();
        this.setTitleWaitLoading(title);
        $("body").addClass("wait-loading");
        return true;
      },
      "hideWaitLoading": function hideWaitLoading() {
        $("body").removeClass("wait-loading");
        return true;
      },
      "showBeforeLoading": function showBeforeLoading(element_target) {
        var el = !element_target ? $("body") : $(element_target);
        el.addClass("before-loading");
        return true;
      },
      "hideBeforeLoading": function hideBeforeLoading(element_target) {
        var el = !element_target ? $("body") : $(element_target);
        el.removeClass("before-loading");
        return true;
      },
      "events": function events() {
        var _self = this;

        $(".trigger-showWaitLoading").on("click", function (e) {
          e.preventDefault();

          _self.showWaitLoading();
        });
        $(".trigger-showBeforeLoading").on("click", function (e) {
          e.preventDefault();

          _self.showBeforeLoading();
        });
      },
      "init": function init() {
        this.events();
      }
    };
  };

  Meg.prototype.notify = function () {
    return {
      "getMessage": function getMessage(text, type) {
        var msg_html;

        switch (type) {
          case "success":
            msg_html = "<div class=\"message message--success\">\n            <i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\n            ".concat(text, "\n            </div>");
            break;

          case "warning":
            msg_html = "<div class=\"message message--warning\">\n            <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\n            ".concat(text, "\n            </div>");
            break;

          case "cancel":
            msg_html = "<div class=\"message message--cancel\">\n            <i class=\"fa fa-ban\" aria-hidden=\"true\"></i>\n            ".concat(text, "\n            </div>");
            break;

          case "info":
            msg_html = "<div class=\"message message--info\">\n            '<i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n            ".concat(text, "\n            </div>");
            break;
        }

        return msg_html;
      },
      "hide": function hide() {
        $(".o-notify").removeClass("o-notify--open");
      },
      "showed": function showed() {
        this.add();
        $(".o-notify").addClass("o-notify--open");
      },
      "removeAfterTime": function removeAfterTime() {
        this.hide();
      },
      "insertText": function insertText(text, type) {
        if (!type || !text) {
          return;
        }

        return this.getMessage(text, type);
      },
      "show": function show(text, type, callback, time) {
        if (!type || !text) {
          return;
        }

        var cb = typeof callback === "function";

        var _this = this;

        time = time || 5000;
        $(".o-notify").html(this.insertText(text, type));
        setTimeout(function () {
          _this.showed();
        }, 100);
        setTimeout(function () {
          _this.removeAfterTime();

          if (cb) {
            callback();
          }
        }, time);
        return true;
      },
      "add": function add() {
        if (!$(".o-notify").length) {
          $("body").append("<div class='o-notify'></div>");
        }

        return true;
      }
    };
  };

  Meg.prototype.init = function () {
    this.accessibility().init();
    this.tab().init();
    this.modal().init();
    this.alert.init();
    this.loading().init();
    this.scrolling().init();
  };

  $doc.ready(function () {
    window.meg = new Meg();
    $("body").on("click", ".trigger-notify", function (e) {
      e.preventDefault();
      meg.notify().show("Ola", "cancel");
    });
    $("body").on("click", "a.js-redirect", function () {
      $("body").removeClass("js-visibled");
    });
  });
  $win.load(function () {
    meg.init();
    setTimeout(function () {
      $("body").addClass("js-visibled");
      meg.lazyLoad().init();
    }, 500);
  });

  if ( true && typeof module.exports !== "undefined") {
    module.exports = Meg;
  }
})($);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "jquery")))

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = jQuery;

/***/ })

/******/ });
